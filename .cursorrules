Welcome to the **AEM Component Development Workflow** tailored for **Cursor Composer**. This guide will help you **identify** and **develop** AEM components for your website, page, or specific UI elements. Below is a step-by-step workflow to guide you through the process.

---

## **Available Options**

At any time, you can type **`options`** to view the available options.

### **Option 0: Context Setup**
- **Description:**  
  Scan the complete codebase and use the input/project-information-context.md file to setup the context for the project.  You will be required these information to generate the code at the proper location.

### **Option 1: Identify Components**
- **Description:**  
  Analyze a provided image of a web page to identify and organize UI elements into structured AEM components.

### **Option 2: Develop Components**
- **Description:**  
  Generate AEM component code based on previously identified components. This includes selecting the business logic language (JavaScript or Java) and creating the necessary code files.

---

## **Step-by-Step Workflow**

### **Step 1: Choose Your Task**

1. **Start the Workflow:**
   - To begin, type **`options`** to view the available options.

2. **Select an Option:**
   - **Type `1`** to choose **Identify Components**.
   - **Type `2`** to choose **Develop Components**.

---

### **Option 1: Identify Components**

#### **Step 1.1: Provide the Image**

- **Instruction:**  
  Share the image of the web page where specific sections are highlighted. Each highlighted section should be clearly marked with a unique identifier (e.g., Section 1, Section 2, etc.).

- **Example:**  
  Please upload or provide a link to the image.

#### **Step 1.2: Analyze the Image**

- **Process:**
  1. **Identify Highlighted Sections:**  
     Locate all highlighted sections in the image.
  2. **Map to Components:**  
     Each highlighted section will be mapped to a distinct AEM component.

#### **Step 1.3: Define Components**

- **Output:**  
  For each highlighted section, provide the following details:

  - **Component Name:**  
    A descriptive name for the component (e.g., Hero Banner, Navigation Menu, Product Teaser).

  - **Authorable Fields:**  
    List of fields that content authors can edit, along with their data types (e.g., Title (Text), Image (Image)).

  - **UI Description:**  
    A brief description of how the component appears on the page.

  - **Business Requirements:**  
    Key functional or non-functional requirements for the component.

  - **Component Type:**  
    Whether the component can be fulfilled using AEM core components or requires custom development.

- **Example Output:**

  | Section ID | Component Name | Authorable Fields | UI Description | Business Requirements | Component Type |
  |------------|----------------|-------------------|----------------|------------------------|----------------|
  | Section 1  | Hero Banner    | Title (Text), Subtitle (Text), Image (Image), Call-to-Action Button (Link) | A large banner at the top of the page featuring a background image, promotional text, and a call-to-action button. | High visual impact, responsive design, easy to update promotional content. | Core Component (Banner) with custom styling |

#### **Step 1.4: Save the output in JSON format to a file**
- **Instruction:**  
  Save the output in json format to a file named `components.json`.
---

### **Option 2: Develop Components**

#### **Step 2.1: Select Component to Develop**

- **Instruction:**  
  Choose one component from the json file components.json created in Option 1 to generate the AEM component code.

- **Example:**  
  Please select the component you want to develop (e.g., Hero Banner).

#### **Step 2.2: Select Business Logic Language**

- **Instruction:**  
  Select the language for the business logic of the component. You have two options:
  - **JavaScript (JS)**
  - **Java**

- **Example:**  
  Please select the language for the business logic (JS or Java).

#### **Step 2.3: Generate Component Code**

- **Process:**
  - Based on your selections, the system will generate the necessary AEM component code, including:
    - **Folder Structure:**  
      Defines the folder structure for the component within the AEM project.
    - **HTML Template (`.html`):**  
      Provides the HTML structure of the component.
    - **Business Logic (`.js` or `.java`):**  
      Includes the necessary JavaScript or Java code for the component.
    - **Component Definition (`.xml`):**  
      Defines the component's properties and metadata.
    - **Dialog Configuration (`_cq_dialog/<component-name>.xml`):**  
      Creates the authoring dialog for the component.
    - **Edit Configuration (`_cq_editConfig.xml`):**  
      Defines the edit configuration for the component.
    - **ClientLibs (Optional):**  
      If the component requires specific styles or scripts, sets up a ClientLib with CSS and JS files. Please create the css files in scss format. Read the sample scss file to understand the format.

---

### **Next Steps**

1. **Identify Components:**
   - If you choose to identify components, follow the steps under **Option 1**.
   - Once components are identified, you can proceed to develop them.

2. **Develop Components:**
   - If you choose to develop components, follow the steps under **Option 2**.
   - Ensure you have the necessary component details from the identification step.

3. **Review and Test:**
   - After generating the component code, review it for accuracy and completeness.
   - Test the component in your AEM environment to ensure it functions as expected.

---
